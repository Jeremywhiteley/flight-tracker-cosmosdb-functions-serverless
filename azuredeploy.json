{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "String",
      "metadata": {
        "description": "The name of the flight tracker app that you wish to create."
      }
    },
    "tenantId": {
      "defaultValue": "[subscription().tenantId]",
      "type": "String",
      "metadata": {
        "description": "Specifies the Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. Get it by using Get-AzSubscription cmdlet."
      }
    },
    "objectId": {
      "type": "String",
      "metadata": {
        "description": "Specifies the object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies. Get it by using Get-AzADUser or Get-AzADServicePrincipal cmdlets."
      }
    }
  },
  "variables": {
    "cosmosDbAccountName": "[concat(parameters('appName'), 'db')]",
    "keyVaultName": "[parameters('appName')]",
    "functionAppName": "[substring(concat(parameters('appName'), uniquestring(resourceGroup().id)), 0, 24)]",
    "hostingPlanName": "[concat(variables('functionAppName'), '-plan')]",
    "storageAccountName": "[substring(concat(parameters('appName'), uniquestring(resourceGroup().id)), 0, 24)]",
    "applicationInsightsName": "[parameters('appName')]",
    "location": "[resourceGroup().location]",
    "cosmosDbApiVersion": "[providers('Microsoft.DocumentDB', 'databaseAccounts').apiVersions[0]]",
    "cosmosDbConnectionStringSecretName": "CosmosDbConnectionString",
    "cosmosDbDatabaseName": "flighttracker",
    "cosmosDbDatabaseContainerName": "flights",
    "webAppPortalName": "[concat(substring(concat(parameters('appName'), uniquestring(resourceGroup().id)), 0, 24), '-webapp')]",
    "appServicePlanName": "[concat(variables('webAppPortalName'), '-plan')]",
    "mapsAccountName": "[concat(parameters('appName'), '-map')]",
    "mapsAccountPrimaryKeySecretName": "MapsPrimaryKey"
  },
  "resources": [
    {
      "type": "Microsoft.DocumentDb/databaseAccounts",
      "apiVersion": "2019-12-12",
      "name": "[variables('cosmosDbAccountName')]",
      "location": "[variables('location')]",
      "tags": {
        "defaultExperience": "Core (SQL)",
        "hidden-cosmos-mmspecial": "",
        "CosmosAccountType": "Non-Production"
      },
      "kind": "GlobalDocumentDB",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "enableMultipleWriteLocations": false,
        "isVirtualNetworkFilterEnabled": false,
        "virtualNetworkRules": [],
        "ipRangeFilter": "",
        "dependsOn": [],
        "capabilities": [],
        "enableFreeTier": true
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2020-03-01",
      "name": "[concat(variables('cosmosDbAccountName'), '/', variables('cosmosDbDatabaseName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[variables('cosmosDbDatabaseName')]"
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-03-01",
      "name": "[concat(variables('cosmosDbAccountName'), '/', variables('cosmosDbDatabaseName'), '/', variables('cosmosDbDatabaseContainerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosDbAccountName'), variables('cosmosDbDatabaseName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[variables('cosmosDbDatabaseContainerName')]",
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          },
          "partitionKey": {
            "paths": [
              "/originCountry"
            ],
            "kind": "Hash"
          },
          "conflictResolutionPolicy": {
            "mode": "LastWriterWins",
            "conflictResolutionPath": "/_ts"
          }
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2018-02-14",
      "name": "[variables('keyVaultName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
        "[resourceId('Microsoft.Web/sites', variables('webAppPortalName'))]"
      ],
      "properties": {
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "tenantId": "[parameters('tenantId')]",
        "accessPolicies": [
          {
            "objectId": "[parameters('objectId')]",
            "tenantId": "[parameters('tenantId')]",
            "permissions": {
              "secrets": [
                "Get",
                "List",
                "Set",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ]
            }
          },
          {
            "objectId": "[reference(concat('Microsoft.Web/sites/', variables('functionAppName')), '2016-08-01', 'Full').identity.principalId]",
            "tenantId": "[parameters('tenantId')]",
            "permissions": {
              "secrets": [
                "Get"
              ]
            }
          },
          {
            "objectId": "[reference(concat('Microsoft.Web/sites/', variables('webAppPortalName')), '2016-08-01', 'Full').identity.principalId]",
            "tenantId": "[parameters('tenantId')]",
            "permissions": {
              "secrets": [
                "Get",
                "List"
              ]
            }
          }
        ],
        "sku": {
          "name": "Standard",
          "family": "A"
        },
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2016-12-01",
      "name": "[variables('storageAccountName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[variables('location')]",
      "kind": "linux",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "computeMode": "Dynamic",
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[variables('location')]",
      "kind": "linux",
      "sku": {
        "name": "F1",
        "tier": "Free"
      },
      "properties": {
        "name": "[variables('appServicePlanName')]",
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('functionAppName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      ],
      "kind": "functionapp,linux",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "reserved": true
        }
      },
      "resources": [
        {
          "type": "config",
          "apiVersion": "2019-08-01",
          "name": "appsettings",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
            "[resourceId('microsoft.insights/components', variables('applicationInsightsName'))]",
            "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('cosmosDbConnectionStringSecretName'))]"
          ],
          "properties": {
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1)]",
            "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1)]",
            "WEBSITE_CONTENTSHARE": "[toLower(variables('functionAppName'))]",
            "FUNCTIONS_EXTENSION_VERSION": "~3",
            "WEBSITE_NODE_DEFAULT_VERSION": "~10",
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('microsoft.insights/components/', variables('applicationInsightsName')), '2015-05-01').InstrumentationKey]",
            "FUNCTIONS_WORKER_RUNTIME": "dotnet",
            "CosmosDbConnectionString": "[concat('@Microsoft.KeyVault(SecretUri=', reference(variables('cosmosDbConnectionStringSecretName')).secretUriWithVersion, ')')]"
          }
        }
      ]
    },
    {
      "apiVersion": "2018-11-01",
      "name": "[variables('webAppPortalName')]",
      "type": "Microsoft.Web/sites",
      "location": "[variables('location')]",
      "tags": null,
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', variables('appServicePlanName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "name": "[variables('webAppPortalName')]",
        "siteConfig": {
          "appSettings": [],
          "linuxFxVersion": "DOTNETCORE|3.1",
          "alwaysOn": false
        },
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "hostingEnvironment": "",
        "clientAffinityEnabled": false
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2018-05-01-preview",
      "name": "[variables('applicationInsightsName')]",
      "location": "East US",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('applicationInsightsName'))]": "Resource"
      },
      "properties": {
        "ApplicationId": "[variables('applicationInsightsName')]",
        "Request_Source": "IbizaWebAppExtensionCreate"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2018-02-14",
      "name": "[concat(variables('keyVaultName'), '/', variables('cosmosDbConnectionStringSecretName'))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.DocumentDb/databaseAccounts', variables('cosmosDbAccountName'))]"
      ],
      "properties": {
        "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName')), '2019-12-12').connectionStrings[0].connectionString]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2018-02-14",
      "name": "[concat(variables('keyVaultName'), '/', variables('mapsAccountPrimaryKeySecretName'))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webAppPortalName'))]"
      ],
      "properties": {
        "value": "[listKeys(resourceId('Microsoft.Maps/accounts', variables('mapsAccountName')), providers('Microsoft.Maps', 'accounts').apiVersions[0]).primaryKey]"
      }
    },
    {
      "apiVersion": "2018-05-01",
      "name": "[variables('mapsAccountName')]",
      "location": "global",
      "type": "Microsoft.Maps/accounts",
      "sku": {
        "name": "S0"
      }
    }
  ],
  "outputs": {}
}
